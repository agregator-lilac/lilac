{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType\\\\Polishing.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport styles from './polishing.module.scss';\nexport var Polishing = function Polishing() {\n  _s();\n\n  var _useField = useField('polishingType'),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var _useState = useState(field.value),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var onChange = function onChange(e) {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  var checked = function checked(v) {\n    return v === value;\n  };\n\n  var type = ['Видимые стороны', 'Все стороны'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041F\\u043E\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), type.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: field.name,\n          onChange: onChange,\n          type: \"radio\",\n          value: item,\n          checked: checked(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), ' ', item]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Polishing, \"lwCPLbUyv1G4yJ0Tb6VkiZVVy/Q=\", false, function () {\n  return [useField];\n});\n\n_c = Polishing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Polishing\");","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType/Polishing.tsx"],"names":["React","useState","useField","styles","Polishing","field","meta","value","setValue","onChange","e","target","checked","v","type","root","map","item","i","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACPF,QAAQ,CAAC,eAAD,CADD;AAAA;AAAA,MACtBG,KADsB;AAAA,MACfC,IADe;;AAAA,kBAEHL,QAAQ,CAASI,KAAK,CAACE,KAAf,CAFL;AAAA,MAEtBA,KAFsB;AAAA,MAEfC,QAFe;;AAG7B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAA4C;AAC3DL,IAAAA,KAAK,CAACI,QAAN,CAAeC,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAHD;;AAIA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD;AAAA,WAAeA,CAAC,KAAKN,KAArB;AAAA,GAAhB;;AACA,MAAMO,IAAI,GAAG,CAAC,iBAAD,EAAoB,aAApB,CAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,IAAvB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAOC,CAAP;AAAA,0BACR;AAAA,gCACE;AACE,UAAA,IAAI,EAAEb,KAAK,CAACc,IADd;AAEE,UAAA,QAAQ,EAAEV,QAFZ;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAEQ,IAJT;AAKE,UAAA,OAAO,EAAEL,OAAO,CAACK,IAAD;AALlB;AAAA;AAAA;AAAA;AAAA,iBADF,EAOK,GAPL,EAQGA,IARH;AAAA,SAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAT,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CA3BM;;GAAMd,S;UACWF,Q;;;KADXE,S","sourcesContent":["import React, { useState } from 'react'\r\nimport { useField } from 'formik'\r\n\r\nimport styles from './polishing.module.scss'\r\n\r\nexport const Polishing = () => {\r\n  const [field, meta] = useField('polishingType')\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const checked = (v: string) => v === value\r\n  const type = ['Видимые стороны', 'Все стороны']\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <p>Полировка</p>\r\n      {type.map((item, i) => (\r\n        <label key={i}>\r\n          <input\r\n            name={field.name}\r\n            onChange={onChange}\r\n            type=\"radio\"\r\n            value={item}\r\n            checked={checked(item)}\r\n          />{' '}\r\n          {item}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}