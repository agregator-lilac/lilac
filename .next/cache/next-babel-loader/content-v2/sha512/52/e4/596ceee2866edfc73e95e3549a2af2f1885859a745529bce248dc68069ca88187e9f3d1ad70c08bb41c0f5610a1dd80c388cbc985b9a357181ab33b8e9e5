{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType\\\\Polishing.tsx\";\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport styles from './polishing.module.scss';\nimport { RadioButton } from '../components/RadioButton';\nexport const Polishing = () => {\n  const [field, meta] = useField('polishingType');\n  const {\n    0: value,\n    1: setValue\n  } = useState(field.value);\n\n  const onChange = e => {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  const checked = v => v === value;\n\n  const type = ['Видимые стороны', 'Все стороны'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: styles.h4,\n      children: \"\\u041F\\u043E\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), type.map((item, i) => /*#__PURE__*/_jsxDEV(RadioButton, {\n      name: field.name,\n      onChange: onChange,\n      isActiv: checked(item),\n      value: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType/Polishing.tsx"],"names":["React","useState","useField","styles","RadioButton","Polishing","field","meta","value","setValue","onChange","e","target","checked","v","type","h4","map","item","i","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAAC,eAAD,CAA9B;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAASK,KAAK,CAACE,KAAf,CAAlC;;AACA,QAAME,QAAQ,GAAIC,CAAD,IAA4C;AAC3DL,IAAAA,KAAK,CAACI,QAAN,CAAeC,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAHD;;AAIA,QAAMK,OAAO,GAAIC,CAAD,IAAeA,CAAC,KAAKN,KAArC;;AACA,QAAMO,IAAI,GAAG,CAAC,iBAAD,EAAoB,aAApB,CAAb;AAEA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEZ,MAAM,CAACa,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBACR,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEb,KAAK,CAACc,IAFd;AAGE,MAAA,QAAQ,EAAEV,QAHZ;AAIE,MAAA,OAAO,EAAEG,OAAO,CAACK,IAAD,CAJlB;AAKE,MAAA,KAAK,EAAEA;AALT,OACOC,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA,kBADF;AAcD,CAxBM","sourcesContent":["import React, { useState } from 'react'\r\nimport { useField } from 'formik'\r\n\r\nimport styles from './polishing.module.scss'\r\nimport { RadioButton } from '../components/RadioButton'\r\n\r\nexport const Polishing = () => {\r\n  const [field, meta] = useField('polishingType')\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const checked = (v: string) => v === value\r\n  const type = ['Видимые стороны', 'Все стороны']\r\n\r\n  return (\r\n    <>\r\n      <h4 className={styles.h4}>Полировка</h4>\r\n      {type.map((item, i) => (\r\n        <RadioButton\r\n          key={i}\r\n          name={field.name}\r\n          onChange={onChange}\r\n          isActiv={checked(item)}\r\n          value={item}\r\n        ></RadioButton>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}