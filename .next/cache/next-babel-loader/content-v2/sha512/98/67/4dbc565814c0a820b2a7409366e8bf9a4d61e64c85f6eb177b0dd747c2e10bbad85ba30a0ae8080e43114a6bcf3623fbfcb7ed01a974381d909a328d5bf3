{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\pages\\\\order.tsx\";\n\nconst Order = ({\n  reviews\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviews.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: item._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Вх${item.size.height} Шх${item.size.width} Тх${item.size.depth}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), item.polishing && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.material\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps() {\n  const reviews = await fetch('http://localhost:3000/api/catalog').then(async data => {\n    return await data.json();\n  });\n  return {\n    props: {\n      reviews\n    }\n  };\n}\nexport default Order;","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/pages/order.tsx"],"names":["Order","reviews","map","item","_id","material","size","height","width","depth","polishing","getServerSideProps","fetch","then","data","json","props"],"mappings":";;;AAgBA,MAAMA,KAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACrD,sBACE;AAAA,cACGA,OAAO,CAACC,GAAR,CAAaC,IAAD,iBACX;AAAA,8BACE;AAAA,kBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAO,KAAIF,IAAI,CAACG,IAAL,CAAUC,MAAO,MAAKJ,IAAI,CAACG,IAAL,CAAUE,KAAM,MAAKL,IAAI,CAACG,IAAL,CAAUG,KAAM;AAAtE;AAAA;AAAA;AAAA;AAAA,cALF,EAMGN,IAAI,CAACO,SAAL,iBACC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMP,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OAAUF,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;AAsBA,OAAO,eAAeO,kBAAf,GAAoC;AACzC,QAAMV,OAAO,GAAG,MAAMW,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CACpB,MAAOC,IAAP,IAAgB;AACd,WAAO,MAAMA,IAAI,CAACC,IAAL,EAAb;AACD,GAHmB,CAAtB;AAMA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,KAAf","sourcesContent":["import { NextPage } from 'next'\r\nimport { IReview } from '@/types/reviews.types'\r\n\r\ninterface IInitialData {\r\n  reviews: {\r\n    size: { width: number; depth: number; height: number }\r\n    _id: string\r\n    material: string\r\n    polishing: boolean\r\n    polishingType: string\r\n    flowerGarden: boolean\r\n    flowerGardenFilling: string\r\n    place: string\r\n  }[]\r\n}\r\n\r\nconst Order: NextPage<IInitialData> = ({ reviews }) => {\r\n  return (\r\n    <div>\r\n      {reviews.map((item) => (\r\n        <div key={item._id}>\r\n          <div>{item._id}</div>\r\n          <div>Материал</div>\r\n          <div>{item.material}</div>\r\n          <div>размеры</div>\r\n          <div>{`Вх${item.size.height} Шх${item.size.width} Тх${item.size.depth}`}</div>\r\n          {item.polishing && (\r\n            <div>\r\n              <div>Материал</div>\r\n              <div>{item.material}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n  const reviews = await fetch('http://localhost:3000/api/catalog').then(\r\n    async (data) => {\r\n      return await data.json()\r\n    }\r\n  )\r\n\r\n  return {\r\n    props: {\r\n      reviews,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Order\r\n"]},"metadata":{},"sourceType":"module"}