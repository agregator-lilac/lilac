{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useField } from 'formik';\nexport const InfoType = props => {\n  const [field, meta] = useField(_objectSpread(_objectSpread({}, props), {}, {\n    type: 'radio'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n        type: \"radio\",\n        value: \"test1\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), \" Test1\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n        type: \"radio\",\n        value: \"test2\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), \" Test2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n        type: \"radio\",\n        value: \"test3\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" Test3\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"picked\",\n        type: \"radio\",\n        value: \"One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \"One\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"picked\",\n        type: \"radio\",\n        value: \"Two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \"One\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType.tsx"],"names":["React","useField","InfoType","props","field","meta","type"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAA8BC,QAA9B,QAA8C,QAA9C;AASA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAmB;AACzC,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBJ,QAAQ,iCAAME,KAAN;AAAaG,IAAAA,IAAI,EAAE;AAAnB,KAA9B;AACA,sBACE;AAAA,4BACE;AAAA,8BACE,iDAAWF,KAAX;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,iDAAWA,KAAX;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,8BACE,iDAAWA,KAAX;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBM","sourcesContent":["import React, { useState } from 'react'\r\nimport { Field, Form, Formik, useField } from 'formik'\r\n\r\nimport { ICatalogItem } from '@/types/catalogItem.types'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IProps {\r\n  name: string\r\n}\r\n\r\nexport const InfoType = (props: IProps) => {\r\n  const [field, meta] = useField({ ...props, type: 'radio' })\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input {...field} type=\"radio\" value=\"test1\" /> Test1\r\n      </label>\r\n      <label>\r\n        <input {...field} type=\"radio\" value=\"test2\" /> Test2\r\n      </label>\r\n      <label>\r\n        <input {...field} type=\"radio\" value=\"test3\" /> Test3\r\n      </label>\r\n      <label>\r\n        <input name=\"picked\" type=\"radio\" value=\"One\" />\r\n        One\r\n      </label>\r\n      <label>\r\n        <input name=\"picked\" type=\"radio\" value=\"Two\" />\r\n        One\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}