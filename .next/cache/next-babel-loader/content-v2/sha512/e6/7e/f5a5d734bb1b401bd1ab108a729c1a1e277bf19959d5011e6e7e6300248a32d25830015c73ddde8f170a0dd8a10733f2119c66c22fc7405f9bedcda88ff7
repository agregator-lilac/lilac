{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\pages\\\\catalogAPI\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MenuSection } from '@/components/catalogAPI/MenuSection';\nimport { CatalogSection } from '@/components/catalogAPI/Catalog';\nvar sections = ['Вертикальные', 'Горизонтальные', 'Кресты', 'Декоративные', 'Мусульманские'];\nvar baseURL = 'http://localhost:3000';\n\nvar post = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var url, data, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _ref.url, data = _ref.data;\n            _context.next = 3;\n            return fetch(baseURL + url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            throw _context.sent;\n\n          case 8:\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function post(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar Catalog = function Catalog(_ref3) {\n  _s();\n\n  var catalogItems = _ref3.catalogItems;\n  console.log(catalogItems);\n\n  var _useState = useState(0),\n      activeSection = _useState[0],\n      setActiveSection = _useState[1];\n\n  var sectionHandler = function sectionHandler(id) {\n    setActiveSection(id);\n  };\n\n  if (catalogItems) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 28\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(MenuSection, {\n      activeSection: activeSection,\n      sectionHandler: sectionHandler,\n      sections: sections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CatalogSection, {\n      catalogItems: catalogItems,\n      section: sections[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Catalog, \"DALczmMfqR7nsz+CnLw2dpYcwy0=\");\n\n_c = Catalog;\nexport var __N_SSP = true;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/pages/catalogAPI/index.tsx"],"names":["React","useState","MenuSection","CatalogSection","sections","baseURL","post","url","data","fetch","method","headers","body","JSON","stringify","response","ok","json","Catalog","catalogItems","console","log","activeSection","setActiveSection","sectionHandler","id"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AAEA,SAASC,cAAT,QAA+B,iCAA/B;AAMA,IAAMC,QAAQ,GAAG,CACf,cADe,EAEf,gBAFe,EAGf,QAHe,EAIf,cAJe,EAKf,eALe,CAAjB;AAQA,IAAMC,OAAO,GAAG,uBAAhB;;AAEA,IAAMC,IAAI;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT,EAAcC,IAAd,QAAcA,IAAd;AAAA;AAAA,mBACYC,KAAK,CAACJ,OAAO,GAAGE,GAAX,EAAgB;AAC1CG,cAAAA,MAAM,EAAE,MADkC;AAE1CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFiC;AAK1CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALoC,aAAhB,CADjB;;AAAA;AACLO,YAAAA,QADK;;AAAA,gBAQNA,QAAQ,CAACC,EARH;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASGD,QAAQ,CAACE,IAAT,EATH;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWEF,QAAQ,CAACE,IAAT,EAXF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJX,IAAI;AAAA;AAAA;AAAA,GAAV;;AAcA,IAAMY,OAA+B,GAAG,SAAlCA,OAAkC,QAAsB;AAAA;;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAD4D,kBAElBlB,QAAQ,CAAC,CAAD,CAFU;AAAA,MAErDqB,aAFqD;AAAA,MAEtCC,gBAFsC;;AAG5D,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAgB;AACrCF,IAAAA,gBAAgB,CAACE,EAAD,CAAhB;AACD,GAFD;;AAGA,MAAIN,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AAClB,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,aAAa,EAAEG,aADjB;AAEE,MAAA,cAAc,EAAEE,cAFlB;AAGE,MAAA,QAAQ,EAAEpB;AAHZ;AAAA;AAAA;AAAA;AAAA,aADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE,QAAC,cAAD;AACE,MAAA,YAAY,EAAEe,YADhB;AAEE,MAAA,OAAO,EAAEf,QAAQ,CAAC,CAAD;AAFnB;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CArBD;;GAAMc,O;;KAAAA,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import { NextPage } from 'next'\r\nimport { IReview } from '@/types/reviews.types'\r\nimport React, { useState } from 'react'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { MenuSection } from '@/components/catalogAPI/MenuSection'\r\nimport { ICatalogItem } from '@/types/catalogItem.types'\r\nimport { CatalogSection } from '@/components/catalogAPI/Catalog'\r\n\r\ninterface IInitialData {\r\n  catalogItems: ICatalogItem[]\r\n}\r\n\r\nconst sections = [\r\n  'Вертикальные',\r\n  'Горизонтальные',\r\n  'Кресты',\r\n  'Декоративные',\r\n  'Мусульманские',\r\n]\r\n\r\nconst baseURL = 'http://localhost:3000'\r\n\r\nconst post = async ({ url, data }) => {\r\n  const response = await fetch(baseURL + url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n  if (!response.ok) {\r\n    throw await response.json()\r\n  }\r\n  return await response.json()\r\n}\r\n\r\nconst Catalog: NextPage<IInitialData> = ({ catalogItems }) => {\r\n  console.log(catalogItems)\r\n  const [activeSection, setActiveSection] = useState(0)\r\n  const sectionHandler = (id: number) => {\r\n    setActiveSection(id)\r\n  }\r\n  if (catalogItems) return <div></div>\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <MenuSection\r\n        activeSection={activeSection}\r\n        sectionHandler={sectionHandler}\r\n        sections={sections}\r\n      ></MenuSection>\r\n      <h1>Каталог</h1>\r\n      <CatalogSection\r\n        catalogItems={catalogItems}\r\n        section={sections[1]}\r\n      ></CatalogSection>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n  const reviews = await fetch('https://lilac.gb-game.ru/reviews').then(\r\n    async (data) => {\r\n      return await data.json()\r\n    }\r\n  )\r\n\r\n  return {\r\n    props: {\r\n      reviews,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Catalog\r\n"]},"metadata":{},"sourceType":"module"}