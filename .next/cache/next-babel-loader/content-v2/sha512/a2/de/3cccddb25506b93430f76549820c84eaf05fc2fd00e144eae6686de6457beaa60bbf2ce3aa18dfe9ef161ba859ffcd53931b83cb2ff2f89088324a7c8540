{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\pages\\\\order.tsx\",\n    _this = this;\n\nvar baseURL = 'http://localhost:3000';\n\nvar deleteAPI = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var url, data, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _ref.url, data = _ref.data;\n            _context.next = 3;\n            return fetch(baseURL + url, {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            throw _context.sent;\n\n          case 8:\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteAPI(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar Order = function Order(_ref3) {\n  var reviews = _ref3.reviews;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviews.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.material\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0412\\u0445\".concat(item.size.height, \" \\u0428\\u0445\").concat(item.size.width, \" \\u0422\\u0445\").concat(item.size.depth)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), item.polishing && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u041F\\u043E\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.polishingType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this), item.flowerGarden && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u0426\\u0432\\u0435\\u0442\\u043D\\u0438\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.flowerGardenFilling\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return deleteAPI({\n              url: '/api/catalog',\n              data: {\n                _id: item._id\n              }\n            });\n          },\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Order;\nexport var __N_SSP = true;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/pages/order.tsx"],"names":["baseURL","deleteAPI","url","data","fetch","method","headers","body","JSON","stringify","response","ok","json","Order","reviews","map","item","_id","material","size","height","width","depth","polishing","polishingType","flowerGarden","flowerGardenFilling"],"mappings":";;;;;;;AAiBA,IAAMA,OAAO,GAAG,uBAAhB;;AAEA,IAAMC,SAAS;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT,EAAcC,IAAd,QAAcA,IAAd;AAAA;AAAA,mBACOC,KAAK,CAACJ,OAAO,GAAGE,GAAX,EAAgB;AAC1CG,cAAAA,MAAM,EAAE,QADkC;AAE1CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFiC;AAK1CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALoC,aAAhB,CADZ;;AAAA;AACVO,YAAAA,QADU;;AAAA,gBAQXA,QAAQ,CAACC,EARE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASFD,QAAQ,CAACE,IAAT,EATE;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWHF,QAAQ,CAACE,IAAT,EAXG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATX,SAAS;AAAA;AAAA;AAAA,GAAf;;AAcA,IAAMY,KAA6B,GAAG,SAAhCA,KAAgC,QAAiB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AACrD,sBACE;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY,UAACC,IAAD;AAAA,0BACX;AAAA,gCACE;AAAA,oBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA,oBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAA,0CAAWF,IAAI,CAACG,IAAL,CAAUC,MAArB,0BAAiCJ,IAAI,CAACG,IAAL,CAAUE,KAA3C,0BAAsDL,IAAI,CAACG,IAAL,CAAUG,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAMGN,IAAI,CAACO,SAAL,iBACC;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAMP,IAAI,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,EAYGR,IAAI,CAACS,YAAL,iBACC;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAMT,IAAI,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbJ,eAkBE;AACE,UAAA,OAAO,EAAE;AAAA,mBACPzB,SAAS,CAAC;AAAEC,cAAAA,GAAG,EAAE,cAAP;AAAuBC,cAAAA,IAAI,EAAE;AAAEc,gBAAAA,GAAG,EAAED,IAAI,CAACC;AAAZ;AAA7B,aAAD,CADF;AAAA,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF;AAAA,SAAUD,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAgCD,CAjCD;;KAAMJ,K;;AAiDN,eAAeA,KAAf","sourcesContent":["import { NextPage } from 'next'\r\nimport { IReview } from '@/types/reviews.types'\r\n\r\ninterface IInitialData {\r\n  reviews: {\r\n    size: { width: number; depth: number; height: number }\r\n    _id: string\r\n    material: string\r\n    polishing: boolean\r\n    polishingType: string\r\n    flowerGarden: boolean\r\n    flowerGardenFilling: string\r\n    place: string\r\n    name: string\r\n  }[]\r\n}\r\n\r\nconst baseURL = 'http://localhost:3000'\r\n\r\nconst deleteAPI = async ({ url, data }) => {\r\n  const response = await fetch(baseURL + url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n  if (!response.ok) {\r\n    throw await response.json()\r\n  }\r\n  return await response.json()\r\n}\r\n\r\nconst Order: NextPage<IInitialData> = ({ reviews }) => {\r\n  return (\r\n    <div>\r\n      {reviews.map((item) => (\r\n        <div key={item._id}>\r\n          <div>{item._id}</div>\r\n          <div>Материал</div>\r\n          <div>{item.material}</div>\r\n          <div>размеры</div>\r\n          <div>{`Вх${item.size.height} Шх${item.size.width} Тх${item.size.depth}`}</div>\r\n          {item.polishing && (\r\n            <div>\r\n              <div>Полировка</div>\r\n              <div>{item.polishingType}</div>\r\n            </div>\r\n          )}\r\n          {item.flowerGarden && (\r\n            <div>\r\n              <div>Цветник</div>\r\n              <div>{item.flowerGardenFilling}</div>\r\n            </div>\r\n          )}\r\n          <button\r\n            onClick={() =>\r\n              deleteAPI({ url: '/api/catalog', data: { _id: item._id } })\r\n            }\r\n          >\r\n            Удалить\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n  const reviews = await fetch('http://localhost:3000/api/catalog').then(\r\n    async (data) => {\r\n      return await data.json()\r\n    }\r\n  )\r\n\r\n  return {\r\n    props: {\r\n      reviews,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Order\r\n"]},"metadata":{},"sourceType":"module"}