{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport { Material } from './InfoType/Material';\nexport var InfoType = function InfoType(props) {\n  _s();\n\n  var _useField = useField(_objectSpread({}, props)),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var _useState = useState(field.value),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var onChange = function onChange(e) {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  var checked = function checked(v) {\n    return v === value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Material, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InfoType, \"lwCPLbUyv1G4yJ0Tb6VkiZVVy/Q=\", false, function () {\n  return [useField];\n});\n\n_c = InfoType;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoType\");","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType.tsx"],"names":["React","useState","useField","Material","InfoType","props","field","meta","value","setValue","onChange","e","target","checked","v"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAA8BC,QAA9B,QAA8C,QAA9C;AAIA,SAASC,QAAT,QAAyB,qBAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmB;AAAA;;AAAA,kBACnBH,QAAQ,mBAAMG,KAAN,EADW;AAAA;AAAA,MAClCC,KADkC;AAAA,MAC3BC,IAD2B;;AAAA,kBAEfN,QAAQ,CAASK,KAAK,CAACE,KAAf,CAFO;AAAA,MAElCA,KAFkC;AAAA,MAE3BC,QAF2B;;AAGzC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAA4C;AAC3DL,IAAAA,KAAK,CAACI,QAAN,CAAeC,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAHD;;AAIA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD;AAAA,WAAeA,CAAC,KAAKN,KAArB;AAAA,GAAhB;;AAEA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAdM;;GAAMJ,Q;UACWF,Q;;;KADXE,Q","sourcesContent":["import React, { useState } from 'react'\r\nimport { Field, Form, Formik, useField } from 'formik'\r\n\r\nimport { ICatalogItem } from '@/types/catalogItem.types'\r\nimport styles from './styles.module.scss'\r\nimport { Material } from './InfoType/Material'\r\n\r\ninterface IProps {\r\n  name: string\r\n}\r\n\r\nexport const InfoType = (props: IProps) => {\r\n  const [field, meta] = useField({ ...props })\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const checked = (v: string) => v === value\r\n\r\n  return (\r\n    <div>\r\n      <Material></Material>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}