{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useField } from 'formik';\nexport var InfoType = function InfoType(props) {\n  _s();\n\n  var _useField = useField(_objectSpread(_objectSpread({}, props), {}, {\n    type: 'radio'\n  })),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  console.log(field.checked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: field.onChange,\n        type: \"radio\",\n        value: \"\\u0413\\u0440\\u0430\\u043D\\u0438\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this), ' ', \"\\u0413\\u0440\\u0430\\u043D\\u0438\\u0442\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: field.onChange,\n        type: \"radio\",\n        value: \"\\u041C\\u0440\\u0430\\u043C\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), ' ', \"\\u041C\\u0440\\u0430\\u043C\\u043E\\u0440\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: field.onChange,\n        type: \"radio\",\n        value: \"\\u0412\\u0438\\u043D\\u0433\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), ' ', \"\\u0412\\u0438\\u043D\\u0433\\u0430\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: field.onChange,\n        type: \"radio\",\n        value: \"\\u0412\\u0438\\u043D\\u0433\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), ' ', \"\\u0412\\u0438\\u043D\\u0433\\u0430\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InfoType, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = InfoType;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoType\");","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType.tsx"],"names":["React","useField","InfoType","props","type","field","meta","console","log","checked","name","onChange"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAA8BC,QAA9B,QAA8C,QAA9C;AASA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmB;AAAA;;AAAA,kBACnBF,QAAQ,iCAAME,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,KADW;AAAA;AAAA,MAClCC,KADkC;AAAA,MAC3BC,IAD2B;;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAlB;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAEJ,KAAK,CAACK,IADd;AAEE,QAAA,QAAQ,EAAEL,KAAK,CAACM,QAFlB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,eADF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAUE;AAAA,8BACE;AACE,QAAA,IAAI,EAAEN,KAAK,CAACK,IADd;AAEE,QAAA,QAAQ,EAAEL,KAAK,CAACM,QAFlB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,eADF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,eAmBE;AAAA,8BACE;AACE,QAAA,IAAI,EAAEN,KAAK,CAACK,IADd;AAEE,QAAA,QAAQ,EAAEL,KAAK,CAACM,QAFlB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,eADF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,eA4BE;AAAA,8BACE;AACE,QAAA,IAAI,EAAEN,KAAK,CAACK,IADd;AAEE,QAAA,QAAQ,EAAEL,KAAK,CAACM,QAFlB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,eADF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,aA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwCD,CA3CM;;GAAMT,Q;UACWD,Q;;;KADXC,Q","sourcesContent":["import React, { useState } from 'react'\r\nimport { Field, Form, Formik, useField } from 'formik'\r\n\r\nimport { ICatalogItem } from '@/types/catalogItem.types'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IProps {\r\n  name: string\r\n}\r\n\r\nexport const InfoType = (props: IProps) => {\r\n  const [field, meta] = useField({ ...props, type: 'radio' })\r\n  console.log(field.checked)\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          name={field.name}\r\n          onChange={field.onChange}\r\n          type=\"radio\"\r\n          value=\"Гранит\"\r\n        />{' '}\r\n        Гранит\r\n      </label>\r\n      <label>\r\n        <input\r\n          name={field.name}\r\n          onChange={field.onChange}\r\n          type=\"radio\"\r\n          value=\"Мрамор\"\r\n        />{' '}\r\n        Мрамор\r\n      </label>\r\n      <label>\r\n        <input\r\n          name={field.name}\r\n          onChange={field.onChange}\r\n          type=\"radio\"\r\n          value=\"Винга\"\r\n        />{' '}\r\n        Винга\r\n      </label>\r\n      <label>\r\n        <input\r\n          name={field.name}\r\n          onChange={field.onChange}\r\n          type=\"radio\"\r\n          value=\"Винга\"\r\n        />{' '}\r\n        Винга\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}