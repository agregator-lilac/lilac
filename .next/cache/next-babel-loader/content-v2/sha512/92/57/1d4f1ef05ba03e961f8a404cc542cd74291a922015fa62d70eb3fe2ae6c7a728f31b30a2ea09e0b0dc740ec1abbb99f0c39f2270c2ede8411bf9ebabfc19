{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\n\nconst CatalogItemInfo = ({\n  params\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsx(\"h1\", {\n      style: {\n        flex: '1 0 auto'\n      },\n      children: \"Loading...\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"h1\", {\n    style: {\n      flex: '1 0 auto'\n    },\n    children: [\"\\u042D\\u0442\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \", params]\n  });\n};\n\nexport async function getStaticPaths() {\n  const paths = [{\n    params: {\n      id: '1'\n    }\n  }, {\n    params: {\n      id: '2'\n    }\n  }];\n  return {\n    paths,\n    fallback: 'blocking'\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  async function f() {\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(params => resolve(params.id), 1000, params);\n    });\n    let result = await promise;\n    return result;\n  }\n\n  return {\n    props: {\n      params: await f()\n    }\n  };\n}\nexport default CatalogItemInfo;","map":null,"metadata":{},"sourceType":"module"}