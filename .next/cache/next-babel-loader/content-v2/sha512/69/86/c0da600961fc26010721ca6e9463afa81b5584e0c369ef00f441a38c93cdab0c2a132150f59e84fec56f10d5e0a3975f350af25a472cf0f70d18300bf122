{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useField } from 'formik';\nexport const InfoType = () => {\n  const [field, meta] = useField({\n    name: 'material',\n    type: 'radio'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\"\n    }, field), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\"\n    }, field), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\"\n    }, field), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType.tsx"],"names":["React","useField","InfoType","field","meta","name","type"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAA8BC,QAA9B,QAA8C,QAA9C;AASA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBH,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAAD,CAA9B;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC;AAAZ,OAA2BH,KAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC;AAAZ,OAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC;AAAZ,OAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATM","sourcesContent":["import React, { useState } from 'react'\r\nimport { Field, Form, Formik, useField } from 'formik'\r\n\r\nimport { ICatalogItem } from '@/types/catalogItem.types'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IProps {\r\n  catalogItem: ICatalogItem\r\n}\r\n\r\nexport const InfoType = () => {\r\n  const [field, meta] = useField({ name: 'material', type: 'radio' })\r\n  return (\r\n    <div>\r\n      <input type=\"checkbox\" {...field} />\r\n      <input type=\"checkbox\" {...field} />\r\n      <input type=\"checkbox\" {...field} />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}