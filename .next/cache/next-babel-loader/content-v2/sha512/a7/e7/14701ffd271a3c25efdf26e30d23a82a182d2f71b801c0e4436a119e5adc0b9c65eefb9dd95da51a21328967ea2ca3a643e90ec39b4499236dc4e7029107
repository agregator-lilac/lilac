{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType\\\\Type.tsx\";\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport styles from './type.module.scss';\nexport const Type = () => {\n  const [field, meta, helper] = useField('type');\n  const {\n    0: value,\n    1: setValue\n  } = useState(field.value);\n\n  const onChange = e => {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  const checked = v => v === value;\n\n  const type = ['Одинарное', 'Парное', 'Тройное'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: type.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: field.name,\n            onChange: onChange,\n            type: \"radio\",\n            value: item,\n            checked: checked(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), item]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: e => setValue(e.target.value),\n        type: \"radio\",\n        value: \"\\u0418\\u043D\\u043E\\u0435\",\n        checked: checked('Иное')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => helper.setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType/Type.tsx"],"names":["React","useState","useField","styles","Type","field","meta","helper","value","setValue","onChange","e","target","checked","v","type","root","map","item","i","name","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,IAAwBL,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAASI,KAAK,CAACG,KAAf,CAAlC;;AACA,QAAME,QAAQ,GAAIC,CAAD,IAA4C;AAC3DN,IAAAA,KAAK,CAACK,QAAN,CAAeC,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAHD;;AAIA,QAAMK,OAAO,GAAIC,CAAD,IAAeA,CAAC,KAAKN,KAArC;;AACA,QAAMO,IAAI,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,CAAb;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACa,IAAvB;AAAA,gBACGD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,4BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAEd,KAAK,CAACe,IADd;AAEE,YAAA,QAAQ,EAAEV,QAFZ;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,KAAK,EAAEQ,IAJT;AAKE,YAAA,OAAO,EAAEL,OAAO,CAACK,IAAD;AALlB;AAAA;AAAA;AAAA;AAAA,kBADF,EAQGA,IARH;AAAA,WAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAO,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA,8BACE;AACE,QAAA,IAAI,EAAEhB,KAAK,CAACe,IADd;AAEE,QAAA,QAAQ,EAAGT,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAF3B;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAC,0BAJR;AAKE,QAAA,OAAO,EAAEK,OAAO,CAAC,MAAD;AALlB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,QAAQ,EAAGF,CAAD,IAAOJ,MAAM,CAACE,QAAP,CAAgBE,CAAC,CAACC,MAAF,CAASJ,KAAzB;AAAxB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA8BD,CAxCM","sourcesContent":["import React, { useState } from 'react'\r\nimport { useField } from 'formik'\r\n\r\nimport styles from './type.module.scss'\r\n\r\nexport const Type = () => {\r\n  const [field, meta, helper] = useField('type')\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const checked = (v: string) => v === value\r\n  const type = ['Одинарное', 'Парное', 'Тройное']\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        {type.map((item, i) => {\r\n          return (\r\n            <label key={i}>\r\n              <input\r\n                name={field.name}\r\n                onChange={onChange}\r\n                type=\"radio\"\r\n                value={item}\r\n                checked={checked(item)}\r\n              />\r\n              {item}\r\n            </label>\r\n          )\r\n        })}\r\n      </div>\r\n      <label style={{ width: '100%' }}>\r\n        <input\r\n          name={field.name}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          type=\"radio\"\r\n          value=\"Иное\"\r\n          checked={checked('Иное')}\r\n        />\r\n        <input onChange={(e) => helper.setValue(e.target.value)}></input>\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}