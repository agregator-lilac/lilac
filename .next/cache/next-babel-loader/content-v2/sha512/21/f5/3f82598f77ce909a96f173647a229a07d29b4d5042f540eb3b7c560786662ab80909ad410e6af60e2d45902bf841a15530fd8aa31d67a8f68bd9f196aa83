{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType\\\\Polishing.tsx\";\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nexport const Polishing = () => {\n  const [field, meta] = useField('polishingType');\n  const {\n    0: value,\n    1: setValue\n  } = useState(field.value);\n\n  const onChange = e => {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  const checked = v => v === value;\n\n  const type = ['Видимые стороны', 'Все стороны'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), type.map((item, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: field.name,\n        onChange: onChange,\n        type: \"radio\",\n        value: item,\n        checked: checked(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), ' ', item]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType/Polishing.tsx"],"names":["React","useState","useField","Polishing","field","meta","value","setValue","onChange","e","target","checked","v","type","map","item","i","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBH,QAAQ,CAAC,eAAD,CAA9B;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAASG,KAAK,CAACE,KAAf,CAAlC;;AACA,QAAME,QAAQ,GAAIC,CAAD,IAA4C;AAC3DL,IAAAA,KAAK,CAACI,QAAN,CAAeC,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAHD;;AAIA,QAAMK,OAAO,GAAIC,CAAD,IAAeA,CAAC,KAAKN,KAArC;;AACA,QAAMO,IAAI,GAAG,CAAC,iBAAD,EAAoB,aAApB,CAAb;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBACR;AAAA,8BACE;AACE,QAAA,IAAI,EAAEZ,KAAK,CAACa,IADd;AAEE,QAAA,QAAQ,EAAET,QAFZ;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAEO,IAJT;AAKE,QAAA,OAAO,EAAEJ,OAAO,CAACI,IAAD;AALlB;AAAA;AAAA;AAAA;AAAA,cADF,EAOK,GAPL,EAQGA,IARH;AAAA,OAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BM","sourcesContent":["import React, { useState } from 'react'\r\nimport { useField } from 'formik'\r\n\r\nimport styles from './polishing.module.scss'\r\n\r\nexport const Polishing = () => {\r\n  const [field, meta] = useField('polishingType')\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const checked = (v: string) => v === value\r\n  const type = ['Видимые стороны', 'Все стороны']\r\n\r\n  return (\r\n    <div>\r\n      <p></p>\r\n      {type.map((item, i) => (\r\n        <label key={i}>\r\n          <input\r\n            name={field.name}\r\n            onChange={onChange}\r\n            type=\"radio\"\r\n            value={item}\r\n            checked={checked(item)}\r\n          />{' '}\r\n          {item}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}