{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\job\\\\lilac\\\\components\\\\CatalogItemInfo\\\\InfoType\\\\Type.tsx\";\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport styles from './type.module.scss';\nimport { RadioGroup } from '../components/RadioGroup';\nexport const Type = () => {\n  const [field, meta, helper] = useField('type');\n  const {\n    0: value,\n    1: setValue\n  } = useState(field.value);\n\n  const onChangeRadio = e => {\n    field.onChange(e);\n    setValue(e.target.value);\n  };\n\n  const onChangeOther = e => {\n    helper.setValue(e.target.value);\n    setValue('Иное');\n  };\n\n  const checked = v => v === value;\n\n  const type = ['Одинарное', 'Парное', 'Тройное'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n      name: \"type\",\n      selectOption: type,\n      heading: \"\\u0422\\u0438\\u043F \\u0437\\u0430\\u0445\\u043E\\u0440\\u043E\\u043D\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.itemOther,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        name: field.name,\n        onChange: e => setValue(e.target.value),\n        type: \"radio\",\n        value: \"\\u0418\\u043D\\u043E\\u0435\",\n        checked: checked('Иное')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.inputOther,\n        placeholder: \"\\u0415\\u0441\\u043B\\u0438 \\u0438\\u043D\\u043E\\u0435, \\u0443\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043A\\u0430\\u043A\\u043E\\u0435\",\n        onChange: e => onChangeOther(e),\n        onFocus: e => onChangeOther(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Users/User/Documents/job/lilac/components/CatalogItemInfo/InfoType/Type.tsx"],"names":["React","useState","useField","styles","RadioGroup","Type","field","meta","helper","value","setValue","onChangeRadio","e","onChange","target","onChangeOther","checked","v","type","itemOther","input","name","inputOther"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,IAAwBN,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAASK,KAAK,CAACG,KAAf,CAAlC;;AACA,QAAME,aAAa,GAAIC,CAAD,IAA4C;AAChEN,IAAAA,KAAK,CAACO,QAAN,CAAeD,CAAf;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CAAR;AACD,GAHD;;AAIA,QAAMM,aAAa,GAAIH,CAAD,IAA4C;AAChEJ,IAAAA,MAAM,CAACE,QAAP,CAAgBE,CAAC,CAACE,MAAF,CAASL,KAAzB;AACAC,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAHD;;AAIA,QAAMM,OAAO,GAAIC,CAAD,IAAeA,CAAC,KAAKR,KAArC;;AACA,QAAMS,IAAI,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,CAAb;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAEA,IAFhB;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,SAAS,EAAEf,MAAM,CAACgB,SAAzB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEhB,MAAM,CAACiB,KADpB;AAEE,QAAA,IAAI,EAAEd,KAAK,CAACe,IAFd;AAGE,QAAA,QAAQ,EAAGT,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CAH3B;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,EAAC,0BALR;AAME,QAAA,OAAO,EAAEO,OAAO,CAAC,MAAD;AANlB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,SAAS,EAAEb,MAAM,CAACmB,UADpB;AAEE,QAAA,WAAW,EAAC,8HAFd;AAGE,QAAA,QAAQ,EAAGV,CAAD,IAAOG,aAAa,CAACH,CAAD,CAHhC;AAIE,QAAA,OAAO,EAAGA,CAAD,IAAOG,aAAa,CAACH,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAyBD,CAvCM","sourcesContent":["import React, { useState } from 'react'\r\nimport { useField } from 'formik'\r\n\r\nimport styles from './type.module.scss'\r\nimport { RadioButton } from '../components/RadioButton'\r\nimport { RadioGroup } from '../components/RadioGroup'\r\n\r\nexport const Type = () => {\r\n  const [field, meta, helper] = useField('type')\r\n  const [value, setValue] = useState<string>(field.value)\r\n  const onChangeRadio = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    field.onChange(e)\r\n    setValue(e.target.value)\r\n  }\r\n  const onChangeOther = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    helper.setValue(e.target.value)\r\n    setValue('Иное')\r\n  }\r\n  const checked = (v: string) => v === value\r\n  const type = ['Одинарное', 'Парное', 'Тройное']\r\n\r\n  return (\r\n    <>\r\n      <RadioGroup\r\n        name=\"type\"\r\n        selectOption={type}\r\n        heading=\"Тип захоронения\"\r\n      ></RadioGroup>\r\n      <label className={styles.itemOther}>\r\n        <input\r\n          className={styles.input}\r\n          name={field.name}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          type=\"radio\"\r\n          value=\"Иное\"\r\n          checked={checked('Иное')}\r\n        />\r\n        <input\r\n          className={styles.inputOther}\r\n          placeholder=\"Если иное, укажите какое\"\r\n          onChange={(e) => onChangeOther(e)}\r\n          onFocus={(e) => onChangeOther(e)}\r\n        ></input>\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}